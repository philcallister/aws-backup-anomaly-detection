{
  "Resources": {
    "BackupAnomalyDetectionDDB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "arn",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "arn",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "anomaly-detection"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "BackupAnomalyDetectionServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "BackupAnomalyDetectionServiceRoleDefaultPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "BackupAnomalyDetectionDDB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BackupAnomalyDetectionServiceRoleDefaultPolicy",
        "Roles": [
          {
            "Ref": "BackupAnomalyDetectionServiceRole"
          }
        ]
      }
    },
    "BackupAnomalyDetectionLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "anomaly-detection-bucket-s3"
          },
          "S3Key": "anomaly-detection-lambda.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "BackupAnomalyDetectionServiceRole",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "BackupAnomalyDetectionServiceRoleDefaultPolicy",
        "BackupAnomalyDetectionServiceRole"
      ]
    },
    "BackupAnomalyDetectionInlinePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ebs:ListChangedBlocks",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "cloudwatch:PutMetricAlarm",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BackupAnomalyDetectionInlinePolicy",
        "Roles": [
          {
            "Ref": "BackupAnomalyDetectionServiceRole"
          }
        ]
      }
    },
    "BackupAnomalyDetectionRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.backup"
          ],
          "detail-type": [
            "Backup Job State Change"
          ],
          "detail": {
            "resourceType": [
              "EBS"
            ],
            "state": [
              "COMPLETED"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "BackupAnomalyDetectionLambda",
                "Arn"
              ]
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumRetryAttempts": 2
            }
          }
        ]
      }
    },
    "BackupAnomalyDetectionRuleAllowEventRule": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BackupAnomalyDetectionLambda",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "BackupAnomalyDetectionRule",
            "Arn"
          ]
        }
      }
    }
  }
}